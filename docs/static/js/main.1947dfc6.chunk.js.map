{"version":3,"sources":["sketch.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["sketch","p","setup","createCanvas","windowWidth","windowHeight","createCapture","hide","draw","background","frameCount","mousePressed","fs","fullscreen","windowResized","resizeCanvas","App","node","React","useRef","useEffect","p5","current","undefined","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAEaA,EAAS,SAACC,GAGrBA,EAAEC,MAAQ,WACGD,EAAEE,aAAaF,EAAEG,YAAaH,EAAEI,cAC5BJ,EAAEK,cAAc,SAClBC,QAGfN,EAAEO,KAAO,WACPP,EAAEQ,WAAWR,EAAES,WAAa,IAAK,GAAI,MAGvCT,EAAEU,aAAe,WACf,IAAIC,IAAOX,EAAEY,aACbZ,EAAEY,YAAYD,IAGhBX,EAAEa,cAAgB,WAChBb,EAAEc,aAAad,EAAEG,YAAaH,EAAEI,gB,OCjBvBW,EAAM,WACjB,IAAMC,EAAOC,IAAMC,OAAO,MAM1B,OAJAD,IAAME,WAAU,WACd,IAAIC,IAAGrB,GAAY,OAAJiB,QAAI,IAAJA,OAAA,EAAAA,EAAMK,eAAWC,KAChC,CAACN,IAGD,qBAAKO,IAAKP,KCECQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1947dfc6.chunk.js","sourcesContent":["import p5 from 'p5'\r\n\r\nexport const sketch = (p: p5) => {\r\n  let renderer: p5.Renderer\r\n  let videoCapture: p5.Element\r\n  p.setup = () => {\r\n    renderer = p.createCanvas(p.windowWidth, p.windowHeight);\r\n    videoCapture = p.createCapture('video')\r\n    videoCapture.hide()\r\n  }\r\n  \r\n  p.draw = () => {\r\n    p.background(p.frameCount % 360, 80, 100);\r\n  }\r\n\r\n  p.mousePressed = () => {\r\n    let fs = !!p.fullscreen()\r\n    p.fullscreen(!fs)\r\n  }\r\n\r\n  p.windowResized = () => {\r\n    p.resizeCanvas(p.windowWidth, p.windowHeight)\r\n  }\r\n}","import React from 'react';\nimport p5 from 'p5'\nimport { sketch } from './sketch'\n\nexport const App = () => {\n  const node = React.useRef(null)\n\n  React.useEffect(() => {\n    new p5(sketch, node?.current || undefined)\n  },[node])\n\n  return (\n    <div ref={node}/>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}